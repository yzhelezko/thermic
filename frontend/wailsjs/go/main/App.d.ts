// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {main} from '../models';
import {frontend} from '../models';

export function CacheMonitoringResult(arg1:main.SSHSession,arg2:string,arg3:string):Promise<void>;

export function CheckForUpdates():Promise<main.UpdateInfo>;

export function CheckWSLAvailable():Promise<boolean>;

export function CloseFileExplorerSession(arg1:string):Promise<void>;

export function CloseMonitoringSession(arg1:main.SSHSession):Promise<void>;

export function CloseSSHSession(arg1:main.SSHSession):Promise<void>;

export function CloseShell(arg1:string):Promise<void>;

export function CloseTab(arg1:string):Promise<void>;

export function CloseWindow():Promise<void>;

export function CreateDefaultProfiles():Promise<void>;

export function CreateMonitoringSession(arg1:main.SSHSession,arg2:main.SSHConfig):Promise<void>;

export function CreateProfile(arg1:string,arg2:string,arg3:string,arg4:string,arg5:string):Promise<main.Profile>;

export function CreateProfileAPI(arg1:string,arg2:string,arg3:string,arg4:string,arg5:string):Promise<main.Profile>;

export function CreateProfileFolder(arg1:string,arg2:string,arg3:string):Promise<main.ProfileFolder>;

export function CreateProfileFolderAPI(arg1:string,arg2:string,arg3:string):Promise<main.ProfileFolder>;

export function CreateProfileFolderWithParentID(arg1:string,arg2:string,arg3:string):Promise<main.ProfileFolder>;

export function CreateProfileFolderWithParentIDAPI(arg1:string,arg2:string,arg3:string):Promise<main.ProfileFolder>;

export function CreateProfileWithFolderID(arg1:string,arg2:string,arg3:string,arg4:string,arg5:string):Promise<main.Profile>;

export function CreateProfileWithFolderIDAPI(arg1:string,arg2:string,arg3:string,arg4:string,arg5:string):Promise<main.Profile>;

export function CreateRemoteDirectory(arg1:string,arg2:string):Promise<void>;

export function CreateSSHSession(arg1:string,arg2:main.SSHConfig):Promise<main.SSHSession>;

export function CreateSSHSessionWithSize(arg1:string,arg2:main.SSHConfig,arg3:number,arg4:number):Promise<main.SSHSession>;

export function CreateTab(arg1:string,arg2:main.SSHConfig):Promise<main.Tab>;

export function CreateTabFromProfile(arg1:string):Promise<main.Tab>;

export function DeleteProfile(arg1:string):Promise<void>;

export function DeleteProfileAPI(arg1:string):Promise<void>;

export function DeleteProfileFolder(arg1:string):Promise<void>;

export function DeleteProfileFolderAPI(arg1:string):Promise<void>;

export function DeleteProfileFolderWithContentsAPI(arg1:string):Promise<void>;

export function DeleteRemotePath(arg1:string,arg2:string):Promise<void>;

export function DeleteRemotePathAdvanced(arg1:string,arg2:string,arg3:boolean):Promise<void>;

export function DownloadAndInstallUpdate(arg1:string):Promise<void>;

export function DownloadRemoteFile(arg1:string,arg2:string,arg3:string):Promise<void>;

export function DuplicateProfile(arg1:string):Promise<main.Profile>;

export function ExecuteMonitoringCommand(arg1:main.SSHSession,arg2:string):Promise<string>;

export function ForceDisconnectSSHSession(arg1:string):Promise<void>;

export function ForceDisconnectTab(arg1:string):Promise<void>;

export function GetActiveTab():Promise<main.Tab>;

export function GetActiveTabInfo():Promise<Record<string, any>>;

export function GetAvailableShells():Promise<Array<string>>;

export function GetAvailableShellsFormatted():Promise<Array<Record<string, string>>>;

export function GetCachedMonitoringResult(arg1:main.SSHSession,arg2:string):Promise<string|boolean>;

export function GetCurrentDefaultShellSetting():Promise<string>;

export function GetDefaultShell():Promise<string>;

export function GetFolderByID(arg1:string):Promise<main.ProfileFolder>;

export function GetFolderByIDAPI(arg1:string):Promise<main.ProfileFolder>;

export function GetMetricsAPI():Promise<main.ProfileMetrics>;

export function GetOSInfo():Promise<Record<string, any>>;

export function GetPlatformInfo():Promise<Record<string, any>>;

export function GetPopularTagsAPI():Promise<Array<string>>;

export function GetProfile(arg1:string):Promise<main.Profile>;

export function GetProfileByID(arg1:string):Promise<main.Profile>;

export function GetProfileByIDAPI(arg1:string):Promise<main.Profile>;

export function GetProfileFolder(arg1:string):Promise<main.ProfileFolder>;

export function GetProfileTree():Promise<Array<main.ProfileTreeNode>>;

export function GetProfileTreeAPI():Promise<Array<main.ProfileTreeNode>>;

export function GetProfilesDirectory():Promise<string>;

export function GetProfilesPath():Promise<string>;

export function GetRemoteFileContent(arg1:string,arg2:string):Promise<string>;

export function GetRemoteSystemStats(arg1:string):Promise<Record<string, any>>;

export function GetRemoteWorkingDirectory(arg1:string):Promise<string>;

export function GetSelectToCopyEnabled():Promise<boolean>;

export function GetShellsForUI():Promise<Array<Record<string, any>>>;

export function GetSidebarCollapsed():Promise<boolean>;

export function GetSidebarWidth():Promise<number>;

export function GetSystemStats():Promise<Record<string, any>>;

export function GetTabStatus(arg1:string):Promise<Record<string, any>>;

export function GetTabs():Promise<Array<main.Tab>>;

export function GetTheme():Promise<string>;

export function GetVersionInfo():Promise<main.VersionInfo>;

export function GetVirtualFolderProfilesAPI(arg1:string):Promise<Array<main.Profile>>;

export function GetVirtualFoldersAPI():Promise<Array<main.VirtualFolder>>;

export function GetWSLDistributions():Promise<Array<main.WSLDistribution>>;

export function GetWSLInfo():Promise<Record<string, any>>;

export function GetWindowMaximizedState():Promise<boolean>;

export function Greet(arg1:string):Promise<string>;

export function InitializeFileExplorerSession(arg1:string):Promise<void>;

export function InitializeProfiles():Promise<void>;

export function IsSessionClosed(arg1:string):Promise<boolean>;

export function IsWindowMaximized():Promise<boolean>;

export function ListRemoteFiles(arg1:string,arg2:string):Promise<Array<main.RemoteFileEntry>>;

export function LoadProfile(arg1:string):Promise<main.Profile>;

export function LoadProfileFolder(arg1:string):Promise<main.ProfileFolder>;

export function LoadProfiles():Promise<void>;

export function MaximizeWindow():Promise<void>;

export function MinimizeWindow():Promise<void>;

export function MoveFolder(arg1:string,arg2:string):Promise<void>;

export function MoveFolderAPI(arg1:string,arg2:string):Promise<void>;

export function MoveProfile(arg1:string,arg2:string):Promise<void>;

export function MoveProfileByID(arg1:string,arg2:string):Promise<void>;

export function MoveProfileByIDAPI(arg1:string,arg2:string):Promise<void>;

export function ReconnectTab(arg1:string):Promise<void>;

export function RenameRemotePath(arg1:string,arg2:string,arg3:string):Promise<void>;

export function RenameTab(arg1:string,arg2:string):Promise<void>;

export function ReorderTabs(arg1:Array<string>):Promise<void>;

export function ResizeSSHSession(arg1:main.SSHSession,arg2:number,arg3:number):Promise<void>;

export function ResizeShell(arg1:string,arg2:number,arg3:number):Promise<void>;

export function RestartApplication():Promise<void>;

export function SaveProfile(arg1:main.Profile):Promise<void>;

export function SaveProfileFolder(arg1:main.ProfileFolder):Promise<void>;

export function SearchProfilesAPI(arg1:string,arg2:Array<string>):Promise<Array<main.Profile>>;

export function SelectDirectory():Promise<string>;

export function SelectFile(arg1:string,arg2:Array<frontend.FileFilter>):Promise<string>;

export function SelectFilesToUpload():Promise<Array<string>>;

export function SelectSSHPrivateKey():Promise<string>;

export function SelectSaveLocation(arg1:string):Promise<string>;

export function SetActiveTab(arg1:string):Promise<void>;

export function SetDefaultShell(arg1:string):Promise<void>;

export function SetProfilesPath(arg1:string):Promise<void>;

export function SetSelectToCopyEnabled(arg1:boolean):Promise<void>;

export function SetSidebarCollapsed(arg1:boolean):Promise<void>;

export function SetSidebarWidth(arg1:number):Promise<void>;

export function SetTheme(arg1:string):Promise<void>;

export function ShowMessageDialog(arg1:string,arg2:string):Promise<void>;

export function StartProfileWatcher():Promise<void>;

export function StartSSHShell(arg1:main.SSHSession):Promise<void>;

export function StartShell(arg1:string,arg2:string):Promise<void>;

export function StartTabShell(arg1:string):Promise<void>;

export function StartTabShellWithSize(arg1:string,arg2:number,arg3:number):Promise<void>;

export function StopProfileWatcher():Promise<void>;

export function ToggleFavoriteAPI(arg1:string):Promise<void>;

export function UpdateProfile(arg1:main.Profile):Promise<void>;

export function UpdateProfileFolder(arg1:main.ProfileFolder):Promise<void>;

export function UpdateProfileTagsAPI(arg1:string,arg2:Array<string>):Promise<void>;

export function UpdateRemoteFileContent(arg1:string,arg2:string,arg3:string):Promise<void>;

export function UploadRemoteFiles(arg1:string,arg2:Array<string>,arg3:string):Promise<void>;

export function WaitForSessionClose(arg1:string):Promise<void>;

export function WriteToSSHSession(arg1:main.SSHSession,arg2:string):Promise<void>;

export function WriteToShell(arg1:string,arg2:string):Promise<void>;
